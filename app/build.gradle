apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

// build definitions & properties
def projectName = "places_search"

def env = System.getenv()
def projectEnv = new HashMap()
projectEnv.putAll(env)

if (true) { // TODO - Check if its not CI build.
    Properties placeSearchProperties = new Properties()
    placeSearchProperties.load(new FileInputStream(file('placessearch.properties')))
    updateProjectEnvVars(projectEnv, placeSearchProperties)
}

// Use all projectEnv as local variables
def foursquareapiclientid = projectEnv.get("foursquareapiclientid")
def foursquareapiclientsecret = projectEnv.get("foursquareapiclientsecret")
def userlocationlat = projectEnv.get("userlocationlat")
def userlocationlng = projectEnv.get("userlocationlng")

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        // TODO update with release keystore info
        release {
            storeFile projectEnv.get("debugStoreFile") != null ? file(projectEnv.get("debugStoreFile")) : null
            keyAlias projectEnv.get("debugKeyAlias") != null ? projectEnv.get("debugKeyAlias") : ""
            storePassword projectEnv.get("debugStorePassword") != null ? projectEnv.get("debugStorePassword") : ""
            keyPassword projectEnv.get("debugKeyPassword") != null ? projectEnv.get("debugKeyPassword") : ""
        }
    }

    defaultConfig {
        applicationId "com.grace.placessearch"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        // Project/Build
        buildConfigField "String", "PROJECT_NAME", "\"${projectName}\""
        buildConfigField "String", "FOUR_SQUARE_API_CLIENT_ID", "\"${foursquareapiclientid}\""
        buildConfigField "String", "FOUR_SQUARE_API_CLIENT_SECRET", "\"${foursquareapiclientsecret}\""
        buildConfigField "String", "USER_LOCATION_LAT", "\"${userlocationlat}\""
        buildConfigField "String", "USER_LOCATION_LNG", "\"${userlocationlng}\""

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    sourceSets {
        main { java.srcDirs = ['src/main/kotlin'] }
        test.java.srcDirs += 'src/test/kotlin'
        //androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    // Specifies feature modules that have a dependency on this base module.
    dynamicFeatures = [':placeDetail']

}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // support libs
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.browser:browser:1.2.0'

    // maps
    implementation ('com.google.android.gms:play-services-maps:17.0.0') {
        exclude group: 'com.android.support'
    }

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Butterknife
    implementation 'com.jakewharton:butterknife:7.0.1'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    kapt 'com.jakewharton:butterknife:7.0.1'
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'

    // Dagger
    implementation "com.google.dagger:dagger:2.22"
    kapt "com.google.dagger:dagger-compiler:2.22"
    implementation 'org.glassfish:javax.annotation:10.0-b28'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'

    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.2'

    // Rx
    implementation 'io.reactivex:rxjava:1.1.1'
    implementation 'io.reactivex:rxandroid:1.1.0'

    // Play core library for feature module delivery
    implementation 'com.google.android.play:core:1.8.2'

    // For Kotlin users also import the Kotlin extensions library for Play Core
    implementation 'com.google.android.play:core-ktx:1.8.1'

    // Test
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.assertj:assertj-core:1.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

// Store all build props as env props for ease of use
def updateProjectEnvVars(Map<String, String> projectEnv, Properties placesSearchProps) {
    try {

        projectEnv.put("foursquareapiclientid", placesSearchProps.getProperty("foursquareapiclientid"))
        projectEnv.put("foursquareapiclientsecret", placesSearchProps.getProperty("foursquareapiclientsecret"))
        projectEnv.put("userlocationlat", placesSearchProps.getProperty("userlocationlat"))
        projectEnv.put("userlocationlng", placesSearchProps.getProperty("userlocationlng"))
        projectEnv.put("debugStoreFile", placesSearchProps.getProperty("debugStoreFile"))
        projectEnv.put("debugKeyAlias", placesSearchProps.getProperty("debugKeyAlias"))
        projectEnv.put("debugStorePassword", placesSearchProps.getProperty("debugStorePassword"))
        projectEnv.put("debugKeyPassword", placesSearchProps.getProperty("debugKeyPassword"))

    } catch (Exception e) {
        println("updateProjectEnvVars - Unexpected Errors - Exception is " + e.getMessage())
        e.printStackTrace()
    }
}

